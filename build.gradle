apply plugin: 'groovy'
apply plugin: 'idea'

group = 'io.sdkman'
archivesBaseName = 'sdkman-vendor-gradle-plugin'
version = '1.2.0'

sourceCompatibility = "1.7"
targetCompatibility= "1.7"

buildscript {
  repositories {
    maven {
      url "https://plugins.gradle.org/m2/"
    }
  }
  dependencies {
      classpath "com.gradle.publish:plugin-publish-plugin:0.9.7"
  }
}

apply plugin: "com.gradle.plugin-publish"

repositories {
    jcenter()
    maven { url 'https://jitpack.io' }
}

dependencies {
    compile gradleApi()
    compile 'org.codehaus.groovy:groovy-all:2.4.7'
    // compile 'com.github.groovy-wslite:groovy-wslite:1.1.3'
    compile 'com.github.jwagenleitner:groovy-wslite:4457c93'
    compile 'org.hibernate:hibernate-validator:5.4.1.Final'
    compile 'javax.el:javax.el-api:3.0.0'
    compile 'org.glassfish.web:javax.el:2.2.6'
    testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
    testCompile 'cglib:cglib-nodep:3.2.5'
    testCompile 'junit:junit:4.12'
    testCompile 'com.github.tomakehurst:wiremock:1.46'
}

pluginBundle {
  website = 'http://sdkman.io/'
  vcsUrl = 'https://github.com/sdkman/gradle-sdkman-vendor-plugin'
  description = 'The SDKMAN Vendor Gradle Plugin.'
  tags = ['sdkman', 'sdk', 'gvm', 'gvmtool']

  plugins {
    sdkmanVendorPlugin {
      id = 'io.sdkman.vendors'
      displayName = 'SDKMAN! Vendor Plugin'
    }
  }
}

apply plugin: 'distribution'

distributions {
    main {
        baseName = archivesBaseName
        contents {
            from { libsDir }
        }
    }
}

ext {
    bintrayBaseUrl = 'https://api.bintray.com/maven'
    bintrayUsername = 'sdkman'
    bintrayRepository = 'gradle-plugins'
    bintrayPackage = 'sdkman-vendor-gradle-plugin'
}

apply plugin: 'maven-publish'

task sourceJar(type: Jar) {
    from sourceSets.main.allSource
    classifier = 'source'
}

publishing {
    publications {
        plugin(MavenPublication) {
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            pom.withXml {
                def root = asNode()
                root.appendNode('name', 'SDKMAN! Vendor Gradle plugin')
                root.appendNode('description', 'Gradle plugin for SDKMAN! Vendors to publish Releases.')
                root.appendNode('inceptionYear', '2014')

                def license = root.appendNode('licenses').appendNode('license')
                license.appendNode('name', 'The Apache Software License, Version 2.0')
                license.appendNode('url', 'http://www.apache.org/licenses/LICENSE-2.0.txt')
                license.appendNode('distribution', 'repo')

                def developer = root.appendNode('developers').appendNode('developer')
                developer.appendNode('id', 'vermeulen.mp')
                developer.appendNode('name', 'Marco Vermeulen')
                developer.appendNode('email', 'vermeulen.mp@gmail.com')
            }

        }
    }

    repositories {
        maven {
            name 'Bintray'
            url "$bintrayBaseUrl/$bintrayUsername/$bintrayRepository/$bintrayPackage"

            credentials {
                username = System.getenv('BINTRAY_USERNAME') ?: 'invalid_user'
                password = System.getenv('BINTRAY_API_KEY') ?: 'invalid_key'
            }
        }
    }
}
